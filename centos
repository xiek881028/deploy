#!/bin/bash

#check permission
if [ `id -u` != '0' ]; then
	echo 'Error: You must be root to run this script'
	exit 1
fi

#config
dir=$(cd `dirname $0`; pwd)
version_pcre='10.21'
version_nginx='1.8.1'
version_php='7.0.5'
version_docker_compose='1.7.0'
version_node='6.0.0'
http_user='www'

#installer
function installer() {
	wget -c $3
	tar zxvf $2
	cd $1
	./configure $4
	make && make install
	$5
	cd ..
	rm -rf $1 $2
}

#go to root directory
cd

#echo '================== hostname =================='
#hostnamectl set-hostname ${http_user}

echo '================== add repo && install tools && update && upgrade =================='
yum -y install http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-6.noarch.rpm
yum -y update
yum -y upgrade
yum -y install make cmake gcc gcc-c++ gcc-g77 redhat-lsb net-tools ntp wget curl zip unzip vim-minimal libcap diffutils ca-certificates psmisc libtool-libs file flex bison patch bzip2-devel c-ares-devel curl-devel e2fsprogs-devel gd-devel gettext-devel glib2-devel gmp-devel kernel-devel krb5-devel libc-client-devel libcurl-devel libevent-devel libicu-devel libidn-devel libjpeg-devel libmcrypt-devel libpng-devel libxml2-devel libXpm-devel libxslt-devel ncurses-devel openssl-devel zlib-devel subversion git-core mariadb
#yum -y install ftp golang nodejs npm siege vsftpd
yum clean all

echo "================== ${http_user} =================="
useradd ${http_user}
#chcon -Rt httpd_sys_rw_content_t /home/${http_user}

#echo "================== vsftpd =================="
#cp /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.bak
#cp /etc/pam.d/vsftpd /etc/pam.d/vsftpd.bak
#sed -i "s/anonymous_enable=YES/anonymous_enable=NO/g" /etc/vsftpd/vsftpd.conf
#sed -i "s/#anon_upload_enable=YES/anon_upload_enable=YES/g" /etc/vsftpd/vsftpd.conf
#sed -i "s/#anon_mkdir_write_enable=YES/anon_mkdir_write_enable=YES/g" /etc/vsftpd/vsftpd.conf
#sed -i "s/#chroot_local_user=YES/chroot_local_user=YES/g" /etc/vsftpd/vsftpd.conf
#sed -i "s/listen=NO/listen=YES/g" /etc/vsftpd/vsftpd.conf
#sed -i "s/listen_ipv6=YES/#listen_ipv6=YES/g" /etc/vsftpd/vsftpd.conf
#echo 'anon_umask=002' >> /etc/vsftpd/vsftpd.conf
#echo 'anon_other_write_enable=YES' >> /etc/vsftpd/vsftpd.conf
#echo 'allow_writeable_chroot=YES' >> /etc/vsftpd/vsftpd.conf
#echo 'guest_enable=YES' >> /etc/vsftpd/vsftpd.conf
#echo 'guest_username=ftp' >> /etc/vsftpd/vsftpd.conf
#echo 'auth required /lib64/security/pam_userdb.so db=/etc/vsftpd/vuser' > /etc/pam.d/vsftpd
#echo 'account required /lib64/security/pam_userdb.so db=/etc/vsftpd/vuser' >> /etc/pam.d/vsftpd
#echo '#db_load -Tt hash -f /etc/vsftpd/vuser.conf /etc/vsftpd/vuser.db' > /etc/vsftpd/vuser.conf
#chown ftp:ftp -R /var/ftp
#setsebool -P ftp_home_dir=1 ftpd_full_access=1

echo '================== pcre =================='
name="pcre2-${version_pcre}"
tar="${name}.tar.gz"
installer ${name} ${tar} ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/${tar}

echo '================== nginx =================='
name="nginx-${version_nginx}"
tar="${name}.tar.gz"
installer ${name} ${tar} http://nginx.org/download/${tar} " --user=${http_user} --group=${http_user} --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module --with-ipv6"

echo "================== php =================="
name="php-${version_php}"
tar="${name}.tar.gz"
path="/usr/local/php"
installer ${name} ${tar} http://cn2.php.net/distributions/${tar} " --prefix=${path} --with-config-file-path=${path}/etc --enable-fpm --with-fpm-user=${http_user} --with-fpm-group=${http_user} --enable-mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-iconv-dir --with-freetype-dir=/usr/local/freetype --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir=/usr --enable-xml --disable-rpath --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --with-curl --enable-mbregex --enable-mbstring --enable-intl --enable-pcntl --with-mcrypt --enable-ftp --with-gd --enable-gd-native-ttf --with-openssl --with-mhash --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap --with-gettext --disable-fileinfo --enable-opcache --with-xsl" "cp php.ini-development php.ini-production ${path}/etc/"
ln -sf ${path}/bin/php /usr/local/bin/php
ln -sf ${path}/bin/phpize /usr/local/bin/phpize
ln -sf ${path}/bin/pear /usr/local/bin/pear
ln -sf ${path}/bin/pecl /usr/local/bin/pecl
ln -sf ${path}/sbin/php-fpm /usr/local/sbin/php-fpm
cp ${path}/etc/php-fpm.conf.default ${path}/etc/php-fpm.conf
cp ${path}/etc/php.ini-development ${path}/etc/php.ini
cp ${path}/etc/php-fpm.d/www.conf.default ${path}/etc/php-fpm.d/www.conf
sed -i 's/short_open_tag =.*/short_open_tag = On/g' ${path}/etc/php.ini
sed -i 's/;cgi.fix_pathinfo=.*/cgi.fix_pathinfo=0/g' ${path}/etc/php.ini
sed -i "s/expose_php = On/expose_php = Off/g" ${path}/etc/php.ini
sed -i 's/post_max_size =.*/post_max_size = 60M/g' ${path}/etc/php.ini
sed -i 's/upload_max_filesize =.*/upload_max_filesize = 60M/g' ${path}/etc/php.ini
sed -i 's/max_execution_time =.*/max_execution_time = 120/g' ${path}/etc/php.ini
sed -i 's/disable_functions =.*/disable_functions = passthru,exec,system,chroot,scandir,chgrp,chown,shell_exec,proc_open,proc_get_status,popen,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server/g' ${path}/etc/php.ini
#mkdir -p /var/lib/php/session
#chown ${http_user}:${http_user} /var/lib/php/session
#setsebool -P httpd_can_network_connect=1
pear config-set php_ini ${path}/etc/php.ini
pecl config-set php_ini ${path}/etc/php.ini
wget -c https://github.com/xiewulong/deploy/raw/master/systemd/php-fpm.service
mv php-fpm.service /usr/lib/systemd/system/

echo '================== composer =================='
curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
#composer global require "fxp/composer-asset-plugin:1.1.1"

#echo '================== docker =================='
#curl -fsSL https://get.docker.com/ | sh
#curl -L https://github.com/docker/compose/releases/download/${version_docker_compose}/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
#chmod +x /usr/local/bin/docker-compose

#echo '================== node =================='
#name="node-v${version_node}"
#tar="${name}.tar.gz"
#installer ${name} ${tar} https://nodejs.org/dist/v${version_node}/${tar}

echo '================== config =================='
#systemctl enable vsftpd
#systemctl start vsftpd
#systemctl enable www
#systemctl start www
systemctl enable php-fpm
systemctl start php-fpm
#systemctl enable docker
#systemctl start docker

#back
cd ${dir}
